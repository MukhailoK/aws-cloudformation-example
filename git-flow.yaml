name: Build and deploy

on:
  push:
    branches: [ "monorepository" ]
  pull_request:
    branches: [ "monorepository" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache JDK
        uses: actions/cache@v2
        with:
          path: ~/.jdk
          key: ${{ runner.os }}-jdk-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-jdk-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Replace secrets in application.properties
        run: |
          sed -i "s|\${DATABASE_DIALECT}|${{ secrets.DATABASE_DIALECT }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${DATABASE_HOST}|${{ secrets.DATABASE_HOST }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${DATABASE_PORT}|${{ secrets.DATABASE_PORT }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${DATABASE_NAME}|${{ secrets.DATABASE_NAME }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${DATABASE_USERNAME}|${{ secrets.DATABASE_USERNAME }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${DATABASE_PASSWORD}|${{ secrets.DATABASE_PASSWORD }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${GIMMONIX_API_URL}|${{ secrets.GIMMONIX_API_URL }}|g" Gimmonix_API_Service/src/main/resources/application.properties
          sed -i "s|\${GIMMONIX_API_KEY}|${{ secrets.GIMMONIX_API_KEY }}|g" Gimmonix_API_Service/src/main/resources/application.properties

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build JAR file
        run: |
          cd Gimmonix_API_Service/
          mvn clean package -DskipTests 

      - name: Rename JAR file
        run: mv Gimmonix_API_Service/target/Gimmonix_API_Service*.jar Gimmonix_API_Service/target/Gimmonix_API_Service.jar

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy to Amazon ECS
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --force-new-deployment
